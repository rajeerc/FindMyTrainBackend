/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-22 21:53:01 UTC)
 * on 2014-09-12 at 14:00:11 UTC 
 * Modify at your own risk.
 */

package com.gss.findmytrainbackend.findmytrain;

/**
 * Service definition for Findmytrain (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link FindmytrainRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Findmytrain extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the findmytrain library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myapp.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "findmytrain/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Findmytrain(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Findmytrain(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getRecord".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link GetRecord#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetRecord getRecord(java.lang.Long id) throws java.io.IOException {
    GetRecord result = new GetRecord(id);
    initialize(result);
    return result;
  }

  public class GetRecord extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Record> {

    private static final String REST_PATH = "record/{id}";

    /**
     * Create a request for the method "getRecord".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link GetRecord#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetRecord#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetRecord(java.lang.Long id) {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.Record.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRecord setAlt(java.lang.String alt) {
      return (GetRecord) super.setAlt(alt);
    }

    @Override
    public GetRecord setFields(java.lang.String fields) {
      return (GetRecord) super.setFields(fields);
    }

    @Override
    public GetRecord setKey(java.lang.String key) {
      return (GetRecord) super.setKey(key);
    }

    @Override
    public GetRecord setOauthToken(java.lang.String oauthToken) {
      return (GetRecord) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRecord setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRecord) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRecord setQuotaUser(java.lang.String quotaUser) {
      return (GetRecord) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRecord setUserIp(java.lang.String userIp) {
      return (GetRecord) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetRecord setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetRecord set(String parameterName, Object value) {
      return (GetRecord) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getStop".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link GetStop#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetStop getStop(java.lang.Long id) throws java.io.IOException {
    GetStop result = new GetStop(id);
    initialize(result);
    return result;
  }

  public class GetStop extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Stop> {

    private static final String REST_PATH = "stop/{id}";

    /**
     * Create a request for the method "getStop".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link GetStop#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetStop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetStop(java.lang.Long id) {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.Stop.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStop setAlt(java.lang.String alt) {
      return (GetStop) super.setAlt(alt);
    }

    @Override
    public GetStop setFields(java.lang.String fields) {
      return (GetStop) super.setFields(fields);
    }

    @Override
    public GetStop setKey(java.lang.String key) {
      return (GetStop) super.setKey(key);
    }

    @Override
    public GetStop setOauthToken(java.lang.String oauthToken) {
      return (GetStop) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStop setQuotaUser(java.lang.String quotaUser) {
      return (GetStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStop setUserIp(java.lang.String userIp) {
      return (GetStop) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetStop setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetStop set(String parameterName, Object value) {
      return (GetStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTrain".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link GetTrain#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetTrain getTrain(java.lang.String id) throws java.io.IOException {
    GetTrain result = new GetTrain(id);
    initialize(result);
    return result;
  }

  public class GetTrain extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Train> {

    private static final String REST_PATH = "train/{id}";

    /**
     * Create a request for the method "getTrain".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link GetTrain#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetTrain#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetTrain(java.lang.String id) {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.Train.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTrain setAlt(java.lang.String alt) {
      return (GetTrain) super.setAlt(alt);
    }

    @Override
    public GetTrain setFields(java.lang.String fields) {
      return (GetTrain) super.setFields(fields);
    }

    @Override
    public GetTrain setKey(java.lang.String key) {
      return (GetTrain) super.setKey(key);
    }

    @Override
    public GetTrain setOauthToken(java.lang.String oauthToken) {
      return (GetTrain) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTrain setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTrain) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTrain setQuotaUser(java.lang.String quotaUser) {
      return (GetTrain) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTrain setUserIp(java.lang.String userIp) {
      return (GetTrain) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetTrain setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetTrain set(String parameterName, Object value) {
      return (GetTrain) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUser".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetUser getUser(java.lang.String id) throws java.io.IOException {
    GetUser result = new GetUser(id);
    initialize(result);
    return result;
  }

  public class GetUser extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.User> {

    private static final String REST_PATH = "user/{id}";

    /**
     * Create a request for the method "getUser".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUser(java.lang.String id) {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.User.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUser setAlt(java.lang.String alt) {
      return (GetUser) super.setAlt(alt);
    }

    @Override
    public GetUser setFields(java.lang.String fields) {
      return (GetUser) super.setFields(fields);
    }

    @Override
    public GetUser setKey(java.lang.String key) {
      return (GetUser) super.setKey(key);
    }

    @Override
    public GetUser setOauthToken(java.lang.String oauthToken) {
      return (GetUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUser setQuotaUser(java.lang.String quotaUser) {
      return (GetUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUser setUserIp(java.lang.String userIp) {
      return (GetUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetUser setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUser set(String parameterName, Object value) {
      return (GetUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertRecord".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link InsertRecord#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Record}
   * @return the request
   */
  public InsertRecord insertRecord(com.gss.findmytrainbackend.findmytrain.model.Record content) throws java.io.IOException {
    InsertRecord result = new InsertRecord(content);
    initialize(result);
    return result;
  }

  public class InsertRecord extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Record> {

    private static final String REST_PATH = "record";

    /**
     * Create a request for the method "insertRecord".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link InsertRecord#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertRecord#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Record}
     * @since 1.13
     */
    protected InsertRecord(com.gss.findmytrainbackend.findmytrain.model.Record content) {
      super(Findmytrain.this, "POST", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.Record.class);
    }

    @Override
    public InsertRecord setAlt(java.lang.String alt) {
      return (InsertRecord) super.setAlt(alt);
    }

    @Override
    public InsertRecord setFields(java.lang.String fields) {
      return (InsertRecord) super.setFields(fields);
    }

    @Override
    public InsertRecord setKey(java.lang.String key) {
      return (InsertRecord) super.setKey(key);
    }

    @Override
    public InsertRecord setOauthToken(java.lang.String oauthToken) {
      return (InsertRecord) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertRecord setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertRecord) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertRecord setQuotaUser(java.lang.String quotaUser) {
      return (InsertRecord) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertRecord setUserIp(java.lang.String userIp) {
      return (InsertRecord) super.setUserIp(userIp);
    }

    @Override
    public InsertRecord set(String parameterName, Object value) {
      return (InsertRecord) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertStop".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link InsertStop#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Stop}
   * @return the request
   */
  public InsertStop insertStop(com.gss.findmytrainbackend.findmytrain.model.Stop content) throws java.io.IOException {
    InsertStop result = new InsertStop(content);
    initialize(result);
    return result;
  }

  public class InsertStop extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Stop> {

    private static final String REST_PATH = "stop";

    /**
     * Create a request for the method "insertStop".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link InsertStop#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertStop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Stop}
     * @since 1.13
     */
    protected InsertStop(com.gss.findmytrainbackend.findmytrain.model.Stop content) {
      super(Findmytrain.this, "POST", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.Stop.class);
    }

    @Override
    public InsertStop setAlt(java.lang.String alt) {
      return (InsertStop) super.setAlt(alt);
    }

    @Override
    public InsertStop setFields(java.lang.String fields) {
      return (InsertStop) super.setFields(fields);
    }

    @Override
    public InsertStop setKey(java.lang.String key) {
      return (InsertStop) super.setKey(key);
    }

    @Override
    public InsertStop setOauthToken(java.lang.String oauthToken) {
      return (InsertStop) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertStop setQuotaUser(java.lang.String quotaUser) {
      return (InsertStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertStop setUserIp(java.lang.String userIp) {
      return (InsertStop) super.setUserIp(userIp);
    }

    @Override
    public InsertStop set(String parameterName, Object value) {
      return (InsertStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertTrain".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link InsertTrain#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Train}
   * @return the request
   */
  public InsertTrain insertTrain(com.gss.findmytrainbackend.findmytrain.model.Train content) throws java.io.IOException {
    InsertTrain result = new InsertTrain(content);
    initialize(result);
    return result;
  }

  public class InsertTrain extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Train> {

    private static final String REST_PATH = "train";

    /**
     * Create a request for the method "insertTrain".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link InsertTrain#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertTrain#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Train}
     * @since 1.13
     */
    protected InsertTrain(com.gss.findmytrainbackend.findmytrain.model.Train content) {
      super(Findmytrain.this, "POST", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.Train.class);
    }

    @Override
    public InsertTrain setAlt(java.lang.String alt) {
      return (InsertTrain) super.setAlt(alt);
    }

    @Override
    public InsertTrain setFields(java.lang.String fields) {
      return (InsertTrain) super.setFields(fields);
    }

    @Override
    public InsertTrain setKey(java.lang.String key) {
      return (InsertTrain) super.setKey(key);
    }

    @Override
    public InsertTrain setOauthToken(java.lang.String oauthToken) {
      return (InsertTrain) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertTrain setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertTrain) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertTrain setQuotaUser(java.lang.String quotaUser) {
      return (InsertTrain) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertTrain setUserIp(java.lang.String userIp) {
      return (InsertTrain) super.setUserIp(userIp);
    }

    @Override
    public InsertTrain set(String parameterName, Object value) {
      return (InsertTrain) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUser".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link InsertUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.User}
   * @return the request
   */
  public InsertUser insertUser(com.gss.findmytrainbackend.findmytrain.model.User content) throws java.io.IOException {
    InsertUser result = new InsertUser(content);
    initialize(result);
    return result;
  }

  public class InsertUser extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.User> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "insertUser".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.User}
     * @since 1.13
     */
    protected InsertUser(com.gss.findmytrainbackend.findmytrain.model.User content) {
      super(Findmytrain.this, "POST", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.User.class);
    }

    @Override
    public InsertUser setAlt(java.lang.String alt) {
      return (InsertUser) super.setAlt(alt);
    }

    @Override
    public InsertUser setFields(java.lang.String fields) {
      return (InsertUser) super.setFields(fields);
    }

    @Override
    public InsertUser setKey(java.lang.String key) {
      return (InsertUser) super.setKey(key);
    }

    @Override
    public InsertUser setOauthToken(java.lang.String oauthToken) {
      return (InsertUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUser setUserIp(java.lang.String userIp) {
      return (InsertUser) super.setUserIp(userIp);
    }

    @Override
    public InsertUser set(String parameterName, Object value) {
      return (InsertUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listOfStationsOnSelectedTrain".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link ListOfStationsOnSelectedTrain#execute()} method to invoke the remote
   * operation.
   *
   * @param trainId
   * @return the request
   */
  public ListOfStationsOnSelectedTrain listOfStationsOnSelectedTrain(java.lang.String trainId) throws java.io.IOException {
    ListOfStationsOnSelectedTrain result = new ListOfStationsOnSelectedTrain(trainId);
    initialize(result);
    return result;
  }

  public class ListOfStationsOnSelectedTrain extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.StringCollection> {

    private static final String REST_PATH = "findmytrain/v1/listStationsOnTrain";

    /**
     * Create a request for the method "listOfStationsOnSelectedTrain".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link ListOfStationsOnSelectedTrain#execute()} method to invoke
     * the remote operation. <p> {@link ListOfStationsOnSelectedTrain#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param trainId
     * @since 1.13
     */
    protected ListOfStationsOnSelectedTrain(java.lang.String trainId) {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.StringCollection.class);
      this.trainId = com.google.api.client.util.Preconditions.checkNotNull(trainId, "Required parameter trainId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListOfStationsOnSelectedTrain setAlt(java.lang.String alt) {
      return (ListOfStationsOnSelectedTrain) super.setAlt(alt);
    }

    @Override
    public ListOfStationsOnSelectedTrain setFields(java.lang.String fields) {
      return (ListOfStationsOnSelectedTrain) super.setFields(fields);
    }

    @Override
    public ListOfStationsOnSelectedTrain setKey(java.lang.String key) {
      return (ListOfStationsOnSelectedTrain) super.setKey(key);
    }

    @Override
    public ListOfStationsOnSelectedTrain setOauthToken(java.lang.String oauthToken) {
      return (ListOfStationsOnSelectedTrain) super.setOauthToken(oauthToken);
    }

    @Override
    public ListOfStationsOnSelectedTrain setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListOfStationsOnSelectedTrain) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListOfStationsOnSelectedTrain setQuotaUser(java.lang.String quotaUser) {
      return (ListOfStationsOnSelectedTrain) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListOfStationsOnSelectedTrain setUserIp(java.lang.String userIp) {
      return (ListOfStationsOnSelectedTrain) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String trainId;

    /**

     */
    public java.lang.String getTrainId() {
      return trainId;
    }

    public ListOfStationsOnSelectedTrain setTrainId(java.lang.String trainId) {
      this.trainId = trainId;
      return this;
    }

    @Override
    public ListOfStationsOnSelectedTrain set(String parameterName, Object value) {
      return (ListOfStationsOnSelectedTrain) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listOfTrains".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link ListOfTrains#execute()} method to invoke the remote operation.
   *
   * @param station
   * @return the request
   */
  public ListOfTrains listOfTrains(java.lang.String station) throws java.io.IOException {
    ListOfTrains result = new ListOfTrains(station);
    initialize(result);
    return result;
  }

  public class ListOfTrains extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.StringCollection> {

    private static final String REST_PATH = "findmytrain/v1/listTrains";

    /**
     * Create a request for the method "listOfTrains".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link ListOfTrains#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListOfTrains#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param station
     * @since 1.13
     */
    protected ListOfTrains(java.lang.String station) {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.StringCollection.class);
      this.station = com.google.api.client.util.Preconditions.checkNotNull(station, "Required parameter station must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListOfTrains setAlt(java.lang.String alt) {
      return (ListOfTrains) super.setAlt(alt);
    }

    @Override
    public ListOfTrains setFields(java.lang.String fields) {
      return (ListOfTrains) super.setFields(fields);
    }

    @Override
    public ListOfTrains setKey(java.lang.String key) {
      return (ListOfTrains) super.setKey(key);
    }

    @Override
    public ListOfTrains setOauthToken(java.lang.String oauthToken) {
      return (ListOfTrains) super.setOauthToken(oauthToken);
    }

    @Override
    public ListOfTrains setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListOfTrains) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListOfTrains setQuotaUser(java.lang.String quotaUser) {
      return (ListOfTrains) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListOfTrains setUserIp(java.lang.String userIp) {
      return (ListOfTrains) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String station;

    /**

     */
    public java.lang.String getStation() {
      return station;
    }

    public ListOfTrains setStation(java.lang.String station) {
      this.station = station;
      return this;
    }

    @Override
    public ListOfTrains set(String parameterName, Object value) {
      return (ListOfTrains) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listRecord".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link ListRecord#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListRecord listRecord() throws java.io.IOException {
    ListRecord result = new ListRecord();
    initialize(result);
    return result;
  }

  public class ListRecord extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.CollectionResponseRecord> {

    private static final String REST_PATH = "record";

    /**
     * Create a request for the method "listRecord".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link ListRecord#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListRecord#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListRecord() {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.CollectionResponseRecord.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListRecord setAlt(java.lang.String alt) {
      return (ListRecord) super.setAlt(alt);
    }

    @Override
    public ListRecord setFields(java.lang.String fields) {
      return (ListRecord) super.setFields(fields);
    }

    @Override
    public ListRecord setKey(java.lang.String key) {
      return (ListRecord) super.setKey(key);
    }

    @Override
    public ListRecord setOauthToken(java.lang.String oauthToken) {
      return (ListRecord) super.setOauthToken(oauthToken);
    }

    @Override
    public ListRecord setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListRecord) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListRecord setQuotaUser(java.lang.String quotaUser) {
      return (ListRecord) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListRecord setUserIp(java.lang.String userIp) {
      return (ListRecord) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListRecord setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListRecord setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListRecord set(String parameterName, Object value) {
      return (ListRecord) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listStop".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link ListStop#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListStop listStop() throws java.io.IOException {
    ListStop result = new ListStop();
    initialize(result);
    return result;
  }

  public class ListStop extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.CollectionResponseStop> {

    private static final String REST_PATH = "stop";

    /**
     * Create a request for the method "listStop".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link ListStop#execute()} method to invoke the remote operation.
     * <p> {@link
     * ListStop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListStop() {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.CollectionResponseStop.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListStop setAlt(java.lang.String alt) {
      return (ListStop) super.setAlt(alt);
    }

    @Override
    public ListStop setFields(java.lang.String fields) {
      return (ListStop) super.setFields(fields);
    }

    @Override
    public ListStop setKey(java.lang.String key) {
      return (ListStop) super.setKey(key);
    }

    @Override
    public ListStop setOauthToken(java.lang.String oauthToken) {
      return (ListStop) super.setOauthToken(oauthToken);
    }

    @Override
    public ListStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListStop setQuotaUser(java.lang.String quotaUser) {
      return (ListStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListStop setUserIp(java.lang.String userIp) {
      return (ListStop) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListStop setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListStop setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListStop set(String parameterName, Object value) {
      return (ListStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTrain".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link ListTrain#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListTrain listTrain() throws java.io.IOException {
    ListTrain result = new ListTrain();
    initialize(result);
    return result;
  }

  public class ListTrain extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.CollectionResponseTrain> {

    private static final String REST_PATH = "train";

    /**
     * Create a request for the method "listTrain".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link ListTrain#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListTrain#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListTrain() {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.CollectionResponseTrain.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTrain setAlt(java.lang.String alt) {
      return (ListTrain) super.setAlt(alt);
    }

    @Override
    public ListTrain setFields(java.lang.String fields) {
      return (ListTrain) super.setFields(fields);
    }

    @Override
    public ListTrain setKey(java.lang.String key) {
      return (ListTrain) super.setKey(key);
    }

    @Override
    public ListTrain setOauthToken(java.lang.String oauthToken) {
      return (ListTrain) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTrain setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTrain) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTrain setQuotaUser(java.lang.String quotaUser) {
      return (ListTrain) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTrain setUserIp(java.lang.String userIp) {
      return (ListTrain) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListTrain setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListTrain setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListTrain set(String parameterName, Object value) {
      return (ListTrain) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUser".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link ListUser#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListUser listUser() throws java.io.IOException {
    ListUser result = new ListUser();
    initialize(result);
    return result;
  }

  public class ListUser extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.CollectionResponseUser> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "listUser".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link ListUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * ListUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListUser() {
      super(Findmytrain.this, "GET", REST_PATH, null, com.gss.findmytrainbackend.findmytrain.model.CollectionResponseUser.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUser setAlt(java.lang.String alt) {
      return (ListUser) super.setAlt(alt);
    }

    @Override
    public ListUser setFields(java.lang.String fields) {
      return (ListUser) super.setFields(fields);
    }

    @Override
    public ListUser setKey(java.lang.String key) {
      return (ListUser) super.setKey(key);
    }

    @Override
    public ListUser setOauthToken(java.lang.String oauthToken) {
      return (ListUser) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUser setQuotaUser(java.lang.String quotaUser) {
      return (ListUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUser setUserIp(java.lang.String userIp) {
      return (ListUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListUser setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListUser setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListUser set(String parameterName, Object value) {
      return (ListUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeRecord".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link RemoveRecord#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveRecord removeRecord(java.lang.Long id) throws java.io.IOException {
    RemoveRecord result = new RemoveRecord(id);
    initialize(result);
    return result;
  }

  public class RemoveRecord extends FindmytrainRequest<Void> {

    private static final String REST_PATH = "record/{id}";

    /**
     * Create a request for the method "removeRecord".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link RemoveRecord#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveRecord#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveRecord(java.lang.Long id) {
      super(Findmytrain.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveRecord setAlt(java.lang.String alt) {
      return (RemoveRecord) super.setAlt(alt);
    }

    @Override
    public RemoveRecord setFields(java.lang.String fields) {
      return (RemoveRecord) super.setFields(fields);
    }

    @Override
    public RemoveRecord setKey(java.lang.String key) {
      return (RemoveRecord) super.setKey(key);
    }

    @Override
    public RemoveRecord setOauthToken(java.lang.String oauthToken) {
      return (RemoveRecord) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveRecord setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveRecord) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveRecord setQuotaUser(java.lang.String quotaUser) {
      return (RemoveRecord) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveRecord setUserIp(java.lang.String userIp) {
      return (RemoveRecord) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveRecord setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveRecord set(String parameterName, Object value) {
      return (RemoveRecord) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeStop".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link RemoveStop#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveStop removeStop(java.lang.Long id) throws java.io.IOException {
    RemoveStop result = new RemoveStop(id);
    initialize(result);
    return result;
  }

  public class RemoveStop extends FindmytrainRequest<Void> {

    private static final String REST_PATH = "stop/{id}";

    /**
     * Create a request for the method "removeStop".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link RemoveStop#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveStop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveStop(java.lang.Long id) {
      super(Findmytrain.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveStop setAlt(java.lang.String alt) {
      return (RemoveStop) super.setAlt(alt);
    }

    @Override
    public RemoveStop setFields(java.lang.String fields) {
      return (RemoveStop) super.setFields(fields);
    }

    @Override
    public RemoveStop setKey(java.lang.String key) {
      return (RemoveStop) super.setKey(key);
    }

    @Override
    public RemoveStop setOauthToken(java.lang.String oauthToken) {
      return (RemoveStop) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveStop setQuotaUser(java.lang.String quotaUser) {
      return (RemoveStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveStop setUserIp(java.lang.String userIp) {
      return (RemoveStop) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveStop setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveStop set(String parameterName, Object value) {
      return (RemoveStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeTrain".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link RemoveTrain#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveTrain removeTrain(java.lang.String id) throws java.io.IOException {
    RemoveTrain result = new RemoveTrain(id);
    initialize(result);
    return result;
  }

  public class RemoveTrain extends FindmytrainRequest<Void> {

    private static final String REST_PATH = "train/{id}";

    /**
     * Create a request for the method "removeTrain".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link RemoveTrain#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveTrain#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveTrain(java.lang.String id) {
      super(Findmytrain.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveTrain setAlt(java.lang.String alt) {
      return (RemoveTrain) super.setAlt(alt);
    }

    @Override
    public RemoveTrain setFields(java.lang.String fields) {
      return (RemoveTrain) super.setFields(fields);
    }

    @Override
    public RemoveTrain setKey(java.lang.String key) {
      return (RemoveTrain) super.setKey(key);
    }

    @Override
    public RemoveTrain setOauthToken(java.lang.String oauthToken) {
      return (RemoveTrain) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveTrain setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveTrain) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveTrain setQuotaUser(java.lang.String quotaUser) {
      return (RemoveTrain) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveTrain setUserIp(java.lang.String userIp) {
      return (RemoveTrain) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveTrain setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveTrain set(String parameterName, Object value) {
      return (RemoveTrain) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeUser".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link RemoveUser#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveUser removeUser(java.lang.String id) throws java.io.IOException {
    RemoveUser result = new RemoveUser(id);
    initialize(result);
    return result;
  }

  public class RemoveUser extends FindmytrainRequest<Void> {

    private static final String REST_PATH = "user/{id}";

    /**
     * Create a request for the method "removeUser".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link RemoveUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveUser(java.lang.String id) {
      super(Findmytrain.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveUser setAlt(java.lang.String alt) {
      return (RemoveUser) super.setAlt(alt);
    }

    @Override
    public RemoveUser setFields(java.lang.String fields) {
      return (RemoveUser) super.setFields(fields);
    }

    @Override
    public RemoveUser setKey(java.lang.String key) {
      return (RemoveUser) super.setKey(key);
    }

    @Override
    public RemoveUser setOauthToken(java.lang.String oauthToken) {
      return (RemoveUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveUser setQuotaUser(java.lang.String quotaUser) {
      return (RemoveUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveUser setUserIp(java.lang.String userIp) {
      return (RemoveUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveUser setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveUser set(String parameterName, Object value) {
      return (RemoveUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateRecord".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link UpdateRecord#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Record}
   * @return the request
   */
  public UpdateRecord updateRecord(com.gss.findmytrainbackend.findmytrain.model.Record content) throws java.io.IOException {
    UpdateRecord result = new UpdateRecord(content);
    initialize(result);
    return result;
  }

  public class UpdateRecord extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Record> {

    private static final String REST_PATH = "record";

    /**
     * Create a request for the method "updateRecord".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link UpdateRecord#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateRecord#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Record}
     * @since 1.13
     */
    protected UpdateRecord(com.gss.findmytrainbackend.findmytrain.model.Record content) {
      super(Findmytrain.this, "PUT", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.Record.class);
    }

    @Override
    public UpdateRecord setAlt(java.lang.String alt) {
      return (UpdateRecord) super.setAlt(alt);
    }

    @Override
    public UpdateRecord setFields(java.lang.String fields) {
      return (UpdateRecord) super.setFields(fields);
    }

    @Override
    public UpdateRecord setKey(java.lang.String key) {
      return (UpdateRecord) super.setKey(key);
    }

    @Override
    public UpdateRecord setOauthToken(java.lang.String oauthToken) {
      return (UpdateRecord) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateRecord setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateRecord) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateRecord setQuotaUser(java.lang.String quotaUser) {
      return (UpdateRecord) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateRecord setUserIp(java.lang.String userIp) {
      return (UpdateRecord) super.setUserIp(userIp);
    }

    @Override
    public UpdateRecord set(String parameterName, Object value) {
      return (UpdateRecord) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateStop".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link UpdateStop#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Stop}
   * @return the request
   */
  public UpdateStop updateStop(com.gss.findmytrainbackend.findmytrain.model.Stop content) throws java.io.IOException {
    UpdateStop result = new UpdateStop(content);
    initialize(result);
    return result;
  }

  public class UpdateStop extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Stop> {

    private static final String REST_PATH = "stop";

    /**
     * Create a request for the method "updateStop".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link UpdateStop#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateStop#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Stop}
     * @since 1.13
     */
    protected UpdateStop(com.gss.findmytrainbackend.findmytrain.model.Stop content) {
      super(Findmytrain.this, "PUT", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.Stop.class);
    }

    @Override
    public UpdateStop setAlt(java.lang.String alt) {
      return (UpdateStop) super.setAlt(alt);
    }

    @Override
    public UpdateStop setFields(java.lang.String fields) {
      return (UpdateStop) super.setFields(fields);
    }

    @Override
    public UpdateStop setKey(java.lang.String key) {
      return (UpdateStop) super.setKey(key);
    }

    @Override
    public UpdateStop setOauthToken(java.lang.String oauthToken) {
      return (UpdateStop) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateStop setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateStop) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateStop setQuotaUser(java.lang.String quotaUser) {
      return (UpdateStop) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateStop setUserIp(java.lang.String userIp) {
      return (UpdateStop) super.setUserIp(userIp);
    }

    @Override
    public UpdateStop set(String parameterName, Object value) {
      return (UpdateStop) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTrain".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link UpdateTrain#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Train}
   * @return the request
   */
  public UpdateTrain updateTrain(com.gss.findmytrainbackend.findmytrain.model.Train content) throws java.io.IOException {
    UpdateTrain result = new UpdateTrain(content);
    initialize(result);
    return result;
  }

  public class UpdateTrain extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.Train> {

    private static final String REST_PATH = "train";

    /**
     * Create a request for the method "updateTrain".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link UpdateTrain#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateTrain#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.Train}
     * @since 1.13
     */
    protected UpdateTrain(com.gss.findmytrainbackend.findmytrain.model.Train content) {
      super(Findmytrain.this, "PUT", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.Train.class);
    }

    @Override
    public UpdateTrain setAlt(java.lang.String alt) {
      return (UpdateTrain) super.setAlt(alt);
    }

    @Override
    public UpdateTrain setFields(java.lang.String fields) {
      return (UpdateTrain) super.setFields(fields);
    }

    @Override
    public UpdateTrain setKey(java.lang.String key) {
      return (UpdateTrain) super.setKey(key);
    }

    @Override
    public UpdateTrain setOauthToken(java.lang.String oauthToken) {
      return (UpdateTrain) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTrain setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTrain) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTrain setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTrain) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTrain setUserIp(java.lang.String userIp) {
      return (UpdateTrain) super.setUserIp(userIp);
    }

    @Override
    public UpdateTrain set(String parameterName, Object value) {
      return (UpdateTrain) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUser".
   *
   * This request holds the parameters needed by the findmytrain server.  After setting any optional
   * parameters, call the {@link UpdateUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.User}
   * @return the request
   */
  public UpdateUser updateUser(com.gss.findmytrainbackend.findmytrain.model.User content) throws java.io.IOException {
    UpdateUser result = new UpdateUser(content);
    initialize(result);
    return result;
  }

  public class UpdateUser extends FindmytrainRequest<com.gss.findmytrainbackend.findmytrain.model.User> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "updateUser".
     *
     * This request holds the parameters needed by the the findmytrain server.  After setting any
     * optional parameters, call the {@link UpdateUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.gss.findmytrainbackend.findmytrain.model.User}
     * @since 1.13
     */
    protected UpdateUser(com.gss.findmytrainbackend.findmytrain.model.User content) {
      super(Findmytrain.this, "PUT", REST_PATH, content, com.gss.findmytrainbackend.findmytrain.model.User.class);
    }

    @Override
    public UpdateUser setAlt(java.lang.String alt) {
      return (UpdateUser) super.setAlt(alt);
    }

    @Override
    public UpdateUser setFields(java.lang.String fields) {
      return (UpdateUser) super.setFields(fields);
    }

    @Override
    public UpdateUser setKey(java.lang.String key) {
      return (UpdateUser) super.setKey(key);
    }

    @Override
    public UpdateUser setOauthToken(java.lang.String oauthToken) {
      return (UpdateUser) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUser setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUser setUserIp(java.lang.String userIp) {
      return (UpdateUser) super.setUserIp(userIp);
    }

    @Override
    public UpdateUser set(String parameterName, Object value) {
      return (UpdateUser) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Findmytrain}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Findmytrain}. */
    @Override
    public Findmytrain build() {
      return new Findmytrain(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link FindmytrainRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setFindmytrainRequestInitializer(
        FindmytrainRequestInitializer findmytrainRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(findmytrainRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
